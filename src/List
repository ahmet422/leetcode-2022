1. https://leetcode.com/problems/longest-common-prefix/description/	✅

    a Sort array with strings according to string lengths: Arrays.sort(strs,(a,b) -> Integer.compare(a.length(),b.length()));
    b "stringtext".indexOf("stri") is 0

2. https://leetcode.com/problems/valid-perfect-square/ ✅

    a binary search (left, right, middle)

3. https://leetcode.com/problems/valid-parentheses/ ✅
4. https://leetcode.com/problems/baseball-game/ ✅
    a  Integer sum = stack.stream().reduce(0, (a, b) -> a + b);
    b  Try to figure out the most optimum ds : stack in here
5. https://leetcode.com/problems/implement-stack-using-queues/
6. https://leetcode.com/problems/min-stack/description/
7. https://leetcode.com/problems/evaluate-reverse-polish-notation/description/
8. https://leetcode.com/problems/reverse-linked-list/description/  ✅
        a prev -> null, while(head != null) {temp = head, temp = head.next, head.next = prev, prev = head, head = temp;} return prev;
9. https://leetcode.com/problems/merge-two-sorted-lists/description/ ✅
        a create a dummy node and start
        b compare values of l1 and l2. dummy.next = lower value of (l1,l2)
10. https://leetcode.com/problems/palindrome-linked-list/description/ ✅
    a slow node fast node. slow goes to middle fast goes to end. Then reverse first half and compare.
11. https://leetcode.com/problems/remove-linked-list-elements/description/ ✅
    a use prev and curr. When cur.val == val then prev.next = cur.next; prev = cur, cur = cur.next while(cur != null)
12. https://leetcode.com/problems/remove-duplicates-from-sorted-list/description/  ✅

✅
